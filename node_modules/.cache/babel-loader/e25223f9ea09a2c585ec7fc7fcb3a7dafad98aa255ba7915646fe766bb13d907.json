{"ast":null,"code":"var _jsxFileName = \"/Users/gerami/University/349/react_tic_tac_toe_and_calculator/src/components/Panel.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Button from './Button';\nimport Display from './Display';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Panel() {\n  _s();\n  const [displayValue, setDisplayValue] = useState('');\n  const handleButtonClick = value => {\n    // Logic to handle button click\n    // For example, update the display value\n    if (value === 'C') {\n      setDisplayValue('');\n    } else if (value === '=') {\n      // Add logic to evaluate the expression\n    } else {\n      setDisplayValue(displayValue + value);\n    }\n  };\n\n  // Define buttons with their values and optional class names\n  const buttons = [{\n    value: '7'\n  }, {\n    value: '8'\n  }, {\n    value: '9'\n  }, {\n    value: '+',\n    className: 'operator'\n  }, {\n    value: '4'\n  }, {\n    value: '5'\n  }, {\n    value: '6'\n  }, {\n    value: '-',\n    className: 'operator'\n  }\n  // Add more buttons as needed\n  ];\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calculator\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        action: \"\",\n        children: [/*#__PURE__*/_jsxDEV(Display, {\n          value: displayValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: buttons.map((button, index) => /*#__PURE__*/_jsxDEV(Button, {\n            value: button.value,\n            className: button.className,\n            onClick: () => handleButtonClick(button.value)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 9\n  }, this);\n}\n_s(Panel, \"8IWHeiXrTI44DbfF42Ol87ULy28=\");\n_c = Panel;\nexport default Panel;\nvar _c;\n$RefreshReg$(_c, \"Panel\");","map":{"version":3,"names":["React","useState","Button","Display","jsxDEV","_jsxDEV","Panel","_s","displayValue","setDisplayValue","handleButtonClick","value","buttons","className","children","action","fileName","_jsxFileName","lineNumber","columnNumber","map","button","index","onClick","_c","$RefreshReg$"],"sources":["/Users/gerami/University/349/react_tic_tac_toe_and_calculator/src/components/Panel.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport Button from './Button';\nimport Display from './Display';\n\nfunction Panel() {\n    const [displayValue, setDisplayValue] = useState('');\n\n    const handleButtonClick = (value) => {\n        // Logic to handle button click\n        // For example, update the display value\n        if (value === 'C') {\n            setDisplayValue('');\n        } else if (value === '=') {\n            // Add logic to evaluate the expression\n        } else {\n            setDisplayValue(displayValue + value);\n        }\n    };\n\n    // Define buttons with their values and optional class names\n    const buttons = [\n        { value: '7' }, { value: '8' }, { value: '9' }, { value: '+', className: 'operator' },\n        { value: '4' }, { value: '5' }, { value: '6' }, { value: '-', className: 'operator' },\n        // Add more buttons as needed\n    ];\n\n    return (\n        <div className=\"container\">\n            <div className=\"calculator\">\n                <form action=\"\">\n                    <Display value={displayValue} />\n                    <div>\n                        {buttons.map((button, index) => (\n                            <Button\n                                key={index}\n                                value={button.value}\n                                className={button.className}\n                                onClick={() => handleButtonClick(button.value)}\n                            />\n                        ))}\n                    </div>\n                </form>\n            </div>\n        </div>\n    );\n}\n\nexport default Panel;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAOC,OAAO,MAAM,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhC,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,YAAY,EAAEC,eAAe,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMS,iBAAiB,GAAIC,KAAK,IAAK;IACjC;IACA;IACA,IAAIA,KAAK,KAAK,GAAG,EAAE;MACfF,eAAe,CAAC,EAAE,CAAC;IACvB,CAAC,MAAM,IAAIE,KAAK,KAAK,GAAG,EAAE;MACtB;IAAA,CACH,MAAM;MACHF,eAAe,CAACD,YAAY,GAAGG,KAAK,CAAC;IACzC;EACJ,CAAC;;EAED;EACA,MAAMC,OAAO,GAAG,CACZ;IAAED,KAAK,EAAE;EAAI,CAAC,EAAE;IAAEA,KAAK,EAAE;EAAI,CAAC,EAAE;IAAEA,KAAK,EAAE;EAAI,CAAC,EAAE;IAAEA,KAAK,EAAE,GAAG;IAAEE,SAAS,EAAE;EAAW,CAAC,EACrF;IAAEF,KAAK,EAAE;EAAI,CAAC,EAAE;IAAEA,KAAK,EAAE;EAAI,CAAC,EAAE;IAAEA,KAAK,EAAE;EAAI,CAAC,EAAE;IAAEA,KAAK,EAAE,GAAG;IAAEE,SAAS,EAAE;EAAW;EACpF;EAAA,CACH;;EAED,oBACIR,OAAA;IAAKQ,SAAS,EAAC,WAAW;IAAAC,QAAA,eACtBT,OAAA;MAAKQ,SAAS,EAAC,YAAY;MAAAC,QAAA,eACvBT,OAAA;QAAMU,MAAM,EAAC,EAAE;QAAAD,QAAA,gBACXT,OAAA,CAACF,OAAO;UAACQ,KAAK,EAAEH;QAAa;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eAChCd,OAAA;UAAAS,QAAA,EACKF,OAAO,CAACQ,GAAG,CAAC,CAACC,MAAM,EAAEC,KAAK,kBACvBjB,OAAA,CAACH,MAAM;YAEHS,KAAK,EAAEU,MAAM,CAACV,KAAM;YACpBE,SAAS,EAAEQ,MAAM,CAACR,SAAU;YAC5BU,OAAO,EAAEA,CAAA,KAAMb,iBAAiB,CAACW,MAAM,CAACV,KAAK;UAAE,GAH1CW,KAAK;YAAAN,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAIb,CACJ;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAACZ,EAAA,CAzCQD,KAAK;AAAAkB,EAAA,GAALlB,KAAK;AA2Cd,eAAeA,KAAK;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}